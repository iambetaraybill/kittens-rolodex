{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,YAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,2BAAqEC,IAAI,UACjF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCLbC,EAAW,SAACR,GAAD,OAExB,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJtCO,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgDvCG,E,kDA/Cb,aACC,IAAD,8BACE,gBAeFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhBrC,EAAKC,MACL,CAEEb,SAAU,GACVU,YAAa,IANjB,E,gEAWC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAOxC,IAAD,EACiCC,KAAKN,MAA7Bb,EADT,EACSA,SAASU,EADlB,EACkBA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACA,sBAAK9B,UAAU,MAAf,UACC,iDAGG,cAAC,EAAD,CACAW,YAAY,gBAEZC,aAAgBe,KAAKf,eAKvB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAxCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.699af500.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) =>\r\n(\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}/?set=set4&size=180x180`} alt=\"kitty\"/>\r\n        <h2>{props.monster.name }</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) =>\r\n(\r\n<div className=\"card-list\">\r\n{\r\n  props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\r\n}\r\n</div>\r\n);\r\n\r\n\r\n\r\n\r\n// {  // console.log(props);\r\n    \r\n//     return <div className=\"card-list\">\r\n//         {\r\n//           props.monsters.map(monster => <h1 key = {monster.id}>{monster.name }</h1>)\r\n//         }\r\n//         </div>;\r\n\r\n// };\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n    className=\"search\"\r\n    type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n        );","import React, {Component} from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\n// import logo from './logo.svg';\nimport './App.css';\nimport {SearchBox} from \"./components/search-box/search-box.component\"\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n    this.state = \n    {\n      // string: \"Hello Arpan Sarkar\"\n      monsters: [],\n      searchField: ''\n      };\n      // this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount()\n  {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json())\n    .then(users => this.setState({monsters:users}));\n  }\n  handleChange = (e) =>\n  {\n    this.setState({searchField: e.target.value});\n  }\n  render()\n  {\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n    <div className=\"App\">\n     <h1>Kittens Rolodex</h1>\n      {/* <input type=\"search\" placeholder=\"search kitten\" onChange={e =>\n        this.setState({searchField: e.target.value})}/> */}\n        <SearchBox \n        placeholder=\"search kitten\"\n        // handleChange = {e =>this.setState({searchField: e.target.value})}\n        handleChange = {this.handleChange}\n        />\n         \n        \n      {/* <CardList monsters = {this.state.monsters}> */}\n      <CardList monsters = {filteredMonsters}>\n      \n        </CardList> \n     \n    </div>\n    );\n  }\n}\n\nexport default App;\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Hello Yiuha\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Hi Arpan\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// <header className=\"App-header\">\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// <p>\n//   {this.state.string}\n// </p>\n// <button onClick={() => this.setState({string: \"Hello Andrei nigoe\"})}>\n//   Change text\n// </button>\n// </header>\n\n // ,() =>console.log(this.state));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}